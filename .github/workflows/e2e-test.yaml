name: e2e test

on:
  workflow_call:
    inputs:
      timestamp:
        required: true
        type: string
      cache-key:
        required: true
        type: string
      abi:
        required: true
        type: string
    
env:
  CACHE-KEY: ${{ inputs.cache-key }}
  TIMESTAMP: ${{ inputs.timestamp }}
  ABI: ${{ inputs.abi }}
  REPO-OWNER: ${{ github.repository_owner }}

jobs:
  e2e-test:
    name: e2e test
    runs-on: macos-12
    steps:
      - name: Set envs for zingolib CI
        if: ${{ contains(github.repository, 'zingolib') }}
        run: echo "REPO-OWNER=zingolabs" >> $GITHUB_ENV
            
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO-OWNER }}/zingo-mobile
        
      - name: Set envs for x86_64
        if: ${{ env.ABI == 'x86_64' }}
        run: echo "AVD-ARCH=x86_64" >> $GITHUB_ENV

      - name: Set envs for x86
        if: ${{ env.ABI == 'x86' }}
        run: echo "AVD-ARCH=x86" >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      
      - name: Add emulator to PATH
        run: echo "${ANDROID_SDK_ROOT}/emulator" >> $GITHUB_PATH
            
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3.3
          build-root-directory: ./android
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' }}
      
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with: 
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.AVD-ARCH }}
          
      - name: Native rust cache
        uses: actions/cache@v3
        with:
          path: android/app/src/main/jniLibs/${{ env.ABI }}
          key: native-rust-${{ env.ABI }}-${{ env.CACHE-KEY }}
          fail-on-cache-miss: true
      
      - name: create AVD target files
        run: ./scripts/emulator_target.sh -a ${{ env.ABI }}

      - name: Install AVD dependencies
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: ./scripts/emulator_dependencies.sh
  
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: ./scripts/emulator_create.sh

      - run: yarn install
      
      - name: Build Detox apk
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: "./scripts/flow_detox_setup.sh"
      
      - name: Boot emulator
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: "./scripts/emulator_boot.sh '-no-window'"
      
      - name: Run Detox e2e tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: "./scripts/flow_detox_run.sh new_wallet"
          on_retry_command: "./scripts/node_reboot.sh"

        # uses: nick-fields/retry@v2
        # with:
        #   timeout_minutes: 60
        #   max_attempts: 3
        #   command: ./scripts/integration_tests.sh -a ${{ env.ABI }}

      - name: Upload test reports
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ env.ABI }}-${{ env.TIMESTAMP }}
          path: android/app/build/outputs/emulator_output
